openapi: 3.0.1
info:
  title: APICraft
  description: Almacena una gran cantidad de datos acerca de servidores premium y noPremium de Minecraft, junto con otros datos del juego mismo
  version: 1.0.0

servers:
  - url: http://localhost:7777/api

tags:
  - name: users
    description: Este endpoint maneja toda la información relacionada a los usuarios
  
  - name: server
    description: Este endpoint maneja toda la información relacionada a los servidores de Minecraft

paths:
  /users/get:
    get:
      tags:
        - users
      summary: Obtiene todos los usuarios
      operationId: getAll
      responses:
        '200':
          description: Hace una solicitud GET para obtener todos los usuarios de la colección Users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
  /users/get/{id}:
    get:
      tags:
        - users
      summary: Obtiene un usuario por su id
      operationId: getById
      parameters:
        - name: id
          in: path
          required: true
          description: Obtener un usuario de la base de datos por medio de su _id
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Detalles del usuario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
  /users/getName:
    get:
      tags:
        - users
      summary: Obtiene un usuario por su nombre
      operationId: getByName
      parameters:
        - name: query
          in: query
          required: true
          description: Obtener un usuario de la base de datos por medio de su nombre
          schema:
            type: string
      responses:
        '200':
          description: Detalles del usuario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
  /users/patch/{id}:
    patch:
      tags:
        - users
      summary: Actualiza un usuario por ID
      operationId: updateUserById
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario a actualizar
          schema:
            type: string
            format: uuid
      requestBody:
        description: Datos actualizados del usuario
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                  example: 'nuevoNombre'
                email:
                  type: string
                  example: 'nuevoEmail@example.com'
                password:
                  type: string
                  example: 'nuevaContraseña'
                status:
                  type: boolean
                  example: false
      responses:
        '200':
          description: Usuario actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

  /users/post:
    post:
      tags:
        - users
      summary: Crea un nuevo usuario
      operationId: Post
      requestBody:
        description: Datos del usuario a crear
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                  example: 'JordiWild'
                email:
                  type: string
                  example: 'nicolas@aol.com'
                password:
                  type: string
                  example: 'write-read-fill-up'
                status:
                  type: boolean
                  example: true
      responses:
        '201':
          description: Usuario creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
  /users/delete/{id}:
    delete:
      tags:
        - users
      summary: Elimina un usuario por su id
      operationId: deleteById
      parameters:
        - name: id
          in: path
          required: true
          description: Eliminar un usuario de la base de datos por medio de su _id
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Usuario eliminado exitosamente
          
  /server/get:
    get:
      tags:
        - server
      summary: Obtiene todos los servidores
      operationId: ServergetAll
      responses:
        '200':
          description: Hace una solicitud GET para obtener todos los servidores de la colección Servers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/server'
  /server/get/{id}:
    get:
      tags:
        - server
      summary: Obtiene un server por su id
      operationId: getServerById
      parameters:
        - name: id
          in: path
          required: true
          description: Obtener un server de la base de datos por medio de su _id
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Detalles del server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server'
  /server/getName:
    get:
      tags:
        - server
      summary: Obtiene un server por su nombre
      operationId: getServerByName
      parameters:
        - name: query
          in: query
          required: true
          description: Obtener un server de la base de datos por medio de su nombre
          schema:
            type: string
      responses:
        '200':
          description: Detalles del server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server'  
  /server/getIp:
    get:
      tags:
        - server
      summary: Obtiene un server por su Ip
      operationId: getServerByIp
      parameters:
        - name: query
          in: query
          required: true
          description: Obtener un server de la base de datos por medio de su Ip
          schema:
            type: string
      responses:
        '200':
          description: Detalles del server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server'
  /server/getAccess:
    get:
      tags:
        - server
      summary: Obtiene un server según su acceso
      operationId: getServerByAccess
      parameters:
        - name: query
          in: query
          required: true
          description: Obtiene todos los servidores según su acceso
          schema:
            type: string
      responses:
        '200':
          description: Detalles del server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server'
  /server/getCapacity:
    get:
      tags:
        - server
      summary: Obtiene los servidores de una capacidad
      operationId: getServerByCapacity
      parameters:
        - name: query
          in: query
          required: true
          description: Obtener todos los servidores de una capacidad
          schema:
            type: string
      responses:
        '200':
          description: Detalles del server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server'
  /server/getVersion:
    get:
      tags:
        - server
      summary: Obtiene todos los servidores de una version
      operationId: getServerByVersion
      parameters:
        - name: query
          in: query
          required: true
          description: Obtener todos los servidores de una version expecifica
          schema:
            type: string
      responses:
        '200':
          description: Detalles del server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server'
  /server/getPlataform:
    get:
      tags:
        - server
      summary: Obtiene los servidores de una plataforma
      operationId: getServerByPlataform
      parameters:
        - name: query
          in: query
          required: true
          description: Obtiene todos los servidores de una plataforma
          schema:
            type: string
      responses:
        '200':
          description: Detalles del server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server'                
  /server/post:
    post:
      tags:
        - server
      summary: Crea un nuevo Servidor
      operationId: ServerPost
      requestBody:
        description: Datos del servidor a crear
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'ShadowShinime'
                ip:
                  type: string
                  example: 'olimpocraft.me'
                platform:
                  type: string
                  example: 'Bedrock'  
                version:
                  type: string
                  example: 1.16.5  
                capacity:
                  type: number
                  example: 1000
                access:
                  type: string
                  enum:
                    - Premium
                    - noPremium
                status:
                  type: boolean
                  example: true
                hungerGames:
                  type: boolean
                  example: false
                bedWars:
                  type: boolean
                  example: false
                skyWars:
                  type: boolean
                  example: false
                buildBattle:
                  type: boolean
                  example: false
                skyBlock:
                  type: boolean
                  example: false
                survival:
                  type: boolean
                  example: false
                pvp:
                  type: boolean
                  example: false
                eggWars:
                  type: boolean
                  example: false
                creative:
                  type: boolean
                  example: false
                prision:
                  type: boolean
                  example: false
              required:
                - name
                - ip
                - platform
                - version
                - capacity
                - access
                - status
                - hungerGames
                - bedWars
                - skyWars
                - buildBattle
                - skyBlock
                - survival
                - pvp
                - eggWars
                - creative
                - prison
      responses:
        '201':
          description: Servidor creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server'              
  /server/patch/{id}:
    patch:
      tags:
        - server
      summary: Actualiza un servidor por ID
      operationId: updateServerById
      parameters:
        - name: id
          in: path
          required: true
          description: ID del servidor a actualizar
          schema:
            type: string
            format: uuid
      requestBody:
        description: Datos actualizados del usuario
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'ShadowShinime'
                ip:
                  type: string
                  example: 'olimpocraft.me'
                platform:
                  type: string
                  example: 'Bedrock'  
                version:
                  type: string
                  example: 1.16.5  
                capacity:
                  type: number
                  example: 1000
                access:
                  type: string
                  enum:
                    - Premium
                    - noPremium
                status:
                  type: boolean
                  example: true
                hungerGames:
                  type: boolean
                  example: false
                bedWars:
                  type: boolean
                  example: false
                skyWars:
                  type: boolean
                  example: false
                buildBattle:
                  type: boolean
                  example: false
                skyBlock:
                  type: boolean
                  example: false
                survival:
                  type: boolean
                  example: false
                pvp:
                  type: boolean
                  example: false
                eggWars:
                  type: boolean
                  example: false
                creative:
                  type: boolean
                  example: false
                prision:
                  type: boolean
                  example: false
              required:
                - name
                - ip
                - platform
                - version
                - capacity
                - access
                - status
                - hungerGames
                - bedWars
                - skyWars
                - buildBattle
                - skyBlock
                - survival
                - pvp
                - eggWars
                - creative
                - prison                
      responses:
        '200':
          description: Usuario actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server'
  /server/delete/{id}:
    delete:
      tags:
        - server
      summary: Elimina un servidor por su id
      operationId: deleteServerById
      parameters:
        - name: id
          in: path
          required: true
          description: Eliminar un servidor de la base de datos por medio de su _id
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Servidor eliminado exitosamente
                    
  
                
components:
  schemas:
    user:
      type: object
      properties:
        _id:
          type: string
          format: uuid
          example: 6513004a747646d5a334268f
        nickname:
          type: string
          example: 'ShadowShinime'
        email:
          type: string
          example: ShidoriShadaz@gmail.com
        password:
          type: string
          example: "_AAll_d2323_1221sd_&%&_"
        status:
          type: boolean
          example: true
    server:
      type: object
      properties:
        _id:
          type: string
          format: uuid
          example: 6513004a747646d5a334268f
        name:
          type: string
          example: 'ShadowShinime'
        ip:
          type: string
          example: 'olimpocraft.me'
        platform:
          type: string
          example: 'Bedrock'  
        version:
          type: string
          example: 1.16.5  
        capacity:
          type: number
          example: 1000
        access:
          type: string
          enum:
            - Premium
            - noPremium
        status:
          type: boolean
          example: true      
        hungerGames:
          type: boolean
          example: false
        bedWars:
          type: boolean
          example: false
        skyWars:
          type: boolean
          example: false
        buildBattle:
          type: boolean
          example: false
        skyBlock:
          type: boolean
          example: false
        survival:
          type: boolean
          example: false
        pvp:
          type: boolean
          example: false
        eggWars:
          type: boolean
          example: false
        creative:
          type: boolean
          example: false
        prision:
          type: boolean
          example: false
          